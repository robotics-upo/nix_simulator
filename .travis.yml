# Generic .travis.yml file for running continuous integration on Travis-CI for
# any ROS package.
#
# Available here:
#   - https://github.com/felixduvallet/ros-travis-integration
#
# This installs ROS on a clean Travis-CI virtual machine, creates a ROS
# workspace, resolves all listed dependencies, and sets environment variables
# (setup.bash). Then, it compiles the entire ROS workspace (ensuring there are
# no compilation errors), and runs all the tests. If any of the compilation/test
# phases fail, the build is marked as a failure.
#
# We handle two types of package dependencies specified in the package manifest:
#   - system dependencies that can be installed using `rosdep`, including other
#     ROS packages and system libraries. These dependencies must be known to
#     `rosdistro` and are installed using apt-get.
#   - package dependencies that must be checked out from source. These are handled by
#     `wstool`, and should be listed in a file named dependencies.rosinstall.
#

# There are envioronment variables you may want to change, such as ROS_DISTRO,
# ROSINSTALL_FILE, and the CATKIN_OPTIONS file.  See the README.md for more
# information on these flags, and
# https://docs.travis-ci.com/user/environment-variables/ for information about
# Travis environment variables in general.
#
# Author: Felix Duvallet <felixd@gmail.com>

# NOTE: The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

################################################################################

sudo: required
cache:
- apt
language: generic
matrix:
  include:
  - name: Melodic Morenia
    dist: bionic
    env: ROS_DISTRO=melodic
    
env:
  global:
  - ROS_CI_DESKTOP="`lsb_release -cs`"
  - CI_SOURCE_PATH=$(pwd)
  - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
  - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
  - ROS_PARALLEL_JOBS='-j8 -l6'
  - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
  - secure: X56Ht+adqieRbwmdBtWOxSM0gWnwARhcbmKQdneeUuLLY0JwhoA0RUA+NcYO5ICdgf29uIseMCYF3vznU2sPUfmew1yvnbFtHXLJ1TINHoGoZLDF197YDis3UUNW15RAbGnVcZi15TKcTgCG5cqFaBwwRrRAgBAAbgzunE0F/fyL2u0ot1yqXCe2MsyTtxIWY+sRMJ2giNn/12C68W5UWEbHWzT5IaA/ZAqVH4fDa+jf379EyA1WzHrireUfI1wBBPAVAF1bTPzSr7e2ReESiPWYhQKmswJ9lx25utt7lq4MFy5H5ur1thl7n2m26xdMuaaGlkYEsmfkBmfZyB5HNkU3+U414j2hNMQ3xmsrI9r+Xjvh3xVlCpOn8z2IyLJNAff86aCpDjEPynY39X5Lr9ZjHUD6ESchFnMuGv7Krua7TnGXbU/6U/Bj0HRwLZHU9dnn6Qh4FSDZ9yyXpm0fJ9vOvSrZXsPzugqqoyYeDHqhRj/DauFdITERij3oub0nfJYQ2/Oujlc6AkgSWFLnKT3FbB3uqzdPqncDxqU0US03VnJQv64wH/gWMoVy8tzcJx3Wa5mqQy/0u/Rd8m6zKprEAKvkXgZt7vS3Rrw1MyE2XUcN9XaAm7cPX8Uo1Gfkq6mi+pwdLQCGhltHjkGG4JOUU55Bd5Ymp/W2KuKjplU=
before_install:
- sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
- sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
- sudo apt-get update -qq
- sudo apt-get install dpkg
- sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-ros-base
- source /opt/ros/$ROS_DISTRO/setup.bash
- sudo rosdep init
- rosdep update --include-eol-distros
install:
- mkdir -p ~/catkin_ws/src
- cd ~/catkin_ws/src
- catkin_init_workspace
- cd ~/catkin_ws
- catkin_make
- source devel/setup.bash
- cd ~/catkin_ws/src
- ln -s $CI_SOURCE_PATH .
before_script:
- cd ~/catkin_ws/src
- wstool init
- if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
- wstool up
- cd ~/catkin_ws
- rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
- source ~/catkin_ws/devel/setup.bash
- rosrun nix_simulator updateDepends.sh
script:
- source /opt/ros/$ROS_DISTRO/setup.bash
- cd ~/catkin_ws
- catkin_make 
